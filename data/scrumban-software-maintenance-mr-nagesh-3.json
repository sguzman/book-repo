{"categories":["Uncategorized"],"desc":" Software Development and Software Maintenance are distinctly different, with respect to the nature of work and execution of these activities. The work types, work sizes, workflow, required skills, and work stages are all different in Software Maintenance. The execution models that are in practice are primarily devised for software development work, and passed on to maintenance teams with the assumption that the work is similar. This mismatch in execution models has made Software Maintenance inefficient and ineffective. Therefore, it is prudent to look at the needs of Software Maintenance, and devise models, processes, and practices that suit its requirements. All these challenges pose great hurdles for Software Maintenance teams; they frequently stop and start work, switch contexts from one work request to another, and try to traverse the work requests through several silos of cross-functional teams. Over time, several execution models have evolved to address these challenges. Most of these follow agile and Lean methodologies. The model discussed in this publication is called Scrumban, a hybrid version of Kanban and Scrum. This version leverages the features of both models to Stop Starting to keep the work in progress at the minimum and Start Finishing to reduce the end-to-end lead time. This publication describes five steps to implement Scrumban in any Software Maintenance project. Who this book is for: This book is primarily written for anyone working on Software Maintenance projects – project managers, team leads, process coaches, technology analysts, designers, programmers, testers, and other change agents of the software engineering process groups. Just to make it simple, if your answer is “yes” to one or more of the following questions, then this book is for you: 1. Is your Software Maintenance and Support team always working on high priority work items? 2. Are there work items which need to be delivered on time without being impacted by unplanned and emergency work items? 3. Does your team miss or postpone release dates more often than usual? How this book is organized” This book is divided into three main parts: Problem, Solution, and Implementation. Each part is further divided into several chapters. Part I – The Problem section describes the needs and complexities of Software Maintenance. What makes Software Maintenance different from Software Development? What are the characteristics that make it complex? This section concludes with a discussion of the changing needs and complexities of Software Maintenance. Part II– The Solution section describes the execution models currently in practice for Software Maintenance – Traditional Waterfall and Scrum. It also discusses combining Agile and Lean practices to address the needs of Software Maintenance. Lastly, this section develops the most suitable framework for addressing the challenges described earlier. Part III – The Implementation section describes the five steps needed to implement Scrumban in Software Maintenance. Though it may not serve as a cookbook, this section helps in setting the direction for teams to define their own version of the Scrumban method to Stop Starting and Start Finishing.","details":{"authors":"Mr. Nagesh Rao","format":"azw3","isbn-10":"1546519319","isbn-13":"978-1546519317","pages":"230 pages","publication date":"May 5, 2017","publisher":"CreateSpace Independent Publishing Platform","size":"1.58Mb"},"img":"http://23.95.221.108/covers/be/be2d2c374d4330fe7b3570c3198e9870.jpg","link":"https://rapidhosting.info/files/dml","title":"Scrumban Software Maintenance"}