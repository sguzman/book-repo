{"categories":["Algorithms"],"desc":" There are many algorithm texts that provide lots of well-polished code and proofs of correctness. This book is not one of them. Instead, this book presents insights, notations, and analogies to help the novice describe and think about algorithms like an expert. By looking at both the big picture and easy step-by-step methods for developing algorithms, the author helps students avoid the common pitfalls. He stresses paradigms such as loop invariants and recursion to unify a huge range of algorithms into a few meta-algorithms. Part of the goal is to teach the students to think abstractly. Without getting bogged with formal proofs, the book fosters a deeper understanding of how and why each algorithm works. These insights are presented in a slow and clear manner accessible to second- or third-year students of computer science, preparing them to find their own innovative ways to solve problems.","details":{"authors":null,"format":"pdf","isbn-10":"0521614104","isbn-13":"978-0521614108","pages":"472 pages","publication date":"May 19, 2008","publisher":"Cambridge University Press","size":"5.35Mb"},"img":"http://23.95.221.108/covers/29/29bf01c14ce27c10b06ee039c271beba.jpg","link":"https://rapidhosting.info/files/h74","title":"How to Think About Algorithms"}